mouse_skin_size_control/2024_analysis


TODO: fix example dataset to follow a single cell and its neighborhood


INSTALL: 

1) Use anaconda to create a new environment: conda create -n NAME_HERE pyhton=3.9. Activate the new environment using conda activate NAME_HERE

3) Install the required packages using conda: conda install -f requirements.txt

4) Pip required packages:
pip install pystackreg
pip install trimesh 

5) Download the repository from github: github.com/xies/xiesUtil

6) Add xiesUtils and mouse_skin_size_control/utils to the python path: conda develop /PATH/TO/xiesUtils and conda develop /PATH/TO/mouse_skin_size_control/utils

All the code are were developed as scripts to be run in a ipython-compatible IDE.



CONTENTS:

1) Related to Fig 1, 2, and 4:

Expected input data: raw images, segmentation masks of nuclear shapes in 3D, and single cell tracking from MaMuT tracking tables

assemble_movie: semi-automated registration and assembly of movies from longitudinal snapshots
semiauto_tracking_segmentation: collate segmentation and sparse single cell tracking

2) Related to Fig. 3

Expected input data: raw images, segmentation masks of cell and nuclear shapes in 3D

annotate_tissue_dense: annotate cell and microenvironment features
tissue_dynamics_model: statistical models predicting cell cycle dynamics from cell or microenvironment features



EXAMPLE USAGE:

To use annotate cell and microenvironment features, first generate high-quality 3D segmentation masks for cell and nuclear shapes. For mouse epidermal skin images, cellposeâ€™s 3D stitching mode works reasonably well. However, it is still necessary to extensively review the automatic annotations, or use the cellpose 2.0 human-in-the-loop training interface to refine the segmentation models. 

A small test image test_data/example_mouse_skin_image.tif is provided. The channels are as follows:
1 - cytoplasmic masks
2 - nuclear masks
3 - FUCCI-Cdt1 reporter
4 - Cell outline reporter
5 - Nuclear reporter

Secondly, a basal layer contact map is needed to encode the cell-cell contacts within the basal layer. This can be generated by re-slicing the 3D tissue image to follow the surface of the basal layer. For convenience, the contact map for the example image is provided in test_data/example_2d_contact_map.tif

The script interface can be followed in sequence.

1__annotate_adjacency_from_flat_cortical_seg: generates cell-cell adjacency matrices from the contact map (also called flat cortical segmentations). The convention is that nuclear segmentation IDs will be used to uniquely identity each cell.
2__collate_nuclear_and_cyto: map cytoplasmic segmentations onto nuclear segmentations
3__annotate_tissue_densely: generates cell and neighborhood features
3a__plot_diagnostics: optional plotting tools
4__annotate_basal_dividing_cells: generate image statistics for dividing cells
5__combine_dividing_cells_and_dense_tissue_annotations: combine dividing cell features and microenvironment features

This will generate an overall CSV file called ts_features.csv, which contains a large table for all dividing cells over time, and their respective microenvironment features.

This matrix is directly used by scripts in tissue_dynamics_model to perform statistical modeling of the predictor of the G1/S transition. All scripts begin with 1__prepare_data_matrix, which prepares a sanitized and standardized data matrix, which is subsequently used to construct different models.

